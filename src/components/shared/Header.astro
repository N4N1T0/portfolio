---
import { Image } from 'astro:assets'
import type { CollectionEntry } from 'astro:content'

interface Props {
  data:
    | CollectionEntry<'services'>
    | CollectionEntry<'projects'>
    | CollectionEntry<'blog'>
}

const { data } = Astro.props
const variant = data.collection
---

<section
  id='header'
  class:list={[
    'animate-fade-in animate-delay-300 relative flex w-full justify-center overflow-hidden text-center',
    {
      'md: h-[70vh]': variant === 'projects',
      'h-[600px]': variant !== 'projects'
    }
  ]}
  style={`background-color: ${'colors' in data.data ? data.data.colors[0] : 'transparent'};`}
>
  <h1
    id='title'
    class:list={[
      'font-prata animate-fade-in-down animate-delay-400 z-20 self-end text-balance uppercase',
      {
        'text-[11vw]': variant === 'projects',
        'text-[7vw] leading-[7vw]': variant !== 'projects'
      }
    ]}
    style={`color: ${'colors' in data.data ? data.data.colors[1] : 'inherit'};`}
  >
    {data.data.title}
  </h1>

  {
    variant !== 'projects' && (
      <>
        <div class='bg-background absolute inset-0 z-10 h-full w-full opacity-20' />
        <Image
          src={data.data.image}
          alt={data.data.imageAlt || data.data.title}
          loading='eager'
          class='absolute inset-0 h-full w-full object-cover'
          id='primaryimage'
        />
      </>
    )
  }
</section>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const title = document.getElementById('title')

    if (title) {
      const handleScroll = () => {
        title.classList.remove('animate-fade-in-down')
        const scrollPosition = window.scrollY
        title.style.transform = `translateY(${scrollPosition * 0.3}px)`
      }

      // Add scroll event listener
      window.addEventListener('scroll', handleScroll)

      // Clean up event listener when component is removed
      return () => {
        window.removeEventListener('scroll', handleScroll)
      }
    }
  })
</script>
