---
interface Props {
  link?: string
  label?: string
  border: 'border-gray-300' | 'border-gray-800'
}

// Astro Props
const { link, label, border } = Astro.props
---

<aside
  class='absolute top-0 z-50 flex h-10 w-screen items-center justify-between p-10 opacity-0 md:fixed md:h-screen md:w-10 md:flex-col'
  id='nav'
>
  <div
    class='flex items-center space-x-5 text-sm md:mt-32 md:-rotate-90 md:space-x-10'
  >
    <hr class=`w-10 md:w-20 border-[1.5px] ${border}` />
    {
      link === undefined ? (
        <>
          <a href='/es/' class='hover-underline-animation cursor-pointer'>
            Espa√±ol
          </a>
          <a href='/en/' class='hover-underline-animation cursor-pointer'>
            English
          </a>
        </>
      ) : (
        <a
          class:list={[
            'cursor-pointer',
            {
              'hover-underline-animation-white': border === 'border-gray-300'
            },
            { 'hover-underline-animation': border === 'border-gray-800' }
          ]}
          href={link}
        >
          {label}
        </a>
      )
    }
  </div>
  <small class='block text-xs md:-rotate-90'
    >@2020 <span class='hidden md:inline'>Copyrights</span></small
  >
</aside>

<script>
  import anime from 'animejs/lib/anime.es.js'

  anime({
    targets: '#nav',
    opacity: 1,
    duration: 1000,
    ease: 'easeOutExpo'
  })
</script>
