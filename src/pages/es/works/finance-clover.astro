---
import { Image } from 'astro:assets'
import Layout from '@/layouts/Layout.astro'
import { FinanceCloverShowcase, FinanceCloverView } from '@/assets'
---

<Layout
  description='Fullstack Dasboard de finanzas con análisis de datos aplicado a una predicción en una línea de regresión para los ingresos simulados'
  title='Finance Clover - Dashboard potenciado con Analisys de datos'
  className='bg-background'
  label='Proyectos'
  link='/es/works'
  border='border-gray-800'>
  <main
    class='w-screen mt-20 md:mt-10 md:px-24 relative flex flex-col justify-center items-center gap-10 md:gap-20'>
    <div class='w-full bg-[#2d2d34] text-center h-[700px] flex justify-center'>
      <h1
        transition:name='finance clover'
        class='font-prata text-[11vw] text-[#3ba697] self-center md:self-end md:leading-[11rem]'>
        FINANCE CLOVER
      </h1>
    </div>
    <h2
      class='text-[7vw] md:text-[3vw] font-prata max-w-[700px] md:leading-[4rem] my-10 px-5 md:p-0'>
      Fullstack Dasboard de finanzas con análisis de datos aplicado a una
      predicción en una línea de regresión para los ingresos simulados
    </h2>
    <div
      class='flex flex-col md:flex-row justify-between items-start gap-3 md:gap-5 md:px-10 px-5'>
      <div class='flex-1 space-y-2'>
        <h3 class='font-bold md:text-lg'>React</h3>
        <p class='text-sm md:text-base'>
          React te permite construir interfaces de usuario a partir de piezas
          individuales llamadas componentes. Crea tus propios componentes React
          como Thumbnail, LikeButton y Video. Luego combínalos para formar
          pantallas, páginas y aplicaciones.
        </p>
        <a
          href='https://es.react.dev/'
          target='_blank'
          class='hover-underline-animation text-sm font-bold'>Mas info.</a
        >
      </div>
      <div class='flex-1 space-y-2'>
        <h3 class='font-bold md:text-lg'>Material UI</h3>
        <p class='text-sm md:text-base'>
          MUI ofrece un conjunto completo de herramientas de interfaz de usuario
          gratuitas para ayudarle a lanzar nuevas nuevas funciones más rápido.
          Empieza con Material UI, nuestra biblioteca de componentes
          completamente cargada, o trae tu propio sistema de diseño a nuestros
          listos para producción.
        </p>
        <a
          href='https://mui.com/'
          target='_blank'
          class='hover-underline-animation text-sm font-bold'>Mas info.</a
        >
      </div>
      <div class='flex-1 space-y-2'>
        <h3 class='font-bold md:text-lg'>Recharts</h3>
        <p class='text-sm md:text-base'>
          Una librería de gráficos componible construida sobre componentes
          React, especialmente para aplicaciones rápidas y accesibles
        </p>
        <a
          href='https://recharts.org/en-US/'
          target='_blank'
          class='hover-underline-animation text-sm font-bold'>Mas info.</a
        >
      </div>
      <div class='flex-1 space-y-2'>
        <h3 class='font-bold md:text-lg'>Regression</h3>
        <p class='text-sm md:text-base'>
          Regression es un módulo JavaScript que contiene una colección de
          métodos de ajuste lineal por mínimos cuadrados para el análisis
          sencillo de datos. de ajuste lineal por mínimos cuadrados para el
          análisis sencillo de datos.
        </p>
        <a
          href='https://www.npmjs.com/package/regression'
          target='_blank'
          class='hover-underline-animation text-sm font-bold'>Mas info.</a
        >
      </div>
    </div>
    <Image src={FinanceCloverShowcase} alt='Finance Clover Website Showcase' />
    <p class='max-w-[800px] px-5 md:px-0 text-sm md:text-base'>
      El empleo de React, Material UI y tecnologías backend robustas como un
      servidor servidor Node con Express y MongoDB es fundamental para crear una
      potente aplicación de cuadro de mando financiero. La arquitectura basada
      en componentes de React garantiza una interfaz de usuario dinámica y con
      capacidad de respuesta, facilitando de datos. Material UI mejora el
      atractivo visual de la aplicación con un elegante lenguaje de diseño y
      componentes listos para usar. con un lenguaje de diseño elegante y
      componentes listos para usar. En el backend, Node con Express garantiza
      operaciones eficientes del lado del servidor, mientras que MongoDB
      almacenamiento y recuperación de datos con escalabilidad. Esta integración
      de la excelencia con sólidas tecnologías de backend proporciona una base
      sólida para el análisis de datos, dotando a la aplicación del cuadro de
      mando financiero de velocidad, funcionalidad y una interfaz fácil de usar,
      funcionalidad y una interfaz fácil de usar.
    </p>
    <video autoplay muted loop class='w-full mb-10'>
      <source src={FinanceCloverView} type='video/mp4' /></video
    >
  </main>
</Layout>
<div
  class='fixed bottom-10 right-10 p-3 md:p-5 text-left rounded-lg space-y-2 bg-[#2d2d34]'>
  <a
    href='https://github.com/N4N1T0/financeclover-app'
    target='_blank'
    class='text-sm md:text-base hover-underline-animation-widget'>CODE</a
  >
  <a
    href='https://financeclover-app.vercel.app/'
    target='_blank'
    class='text-sm md:text-base hover-underline-animation-widget'>LIVE</a
  >
</div>

<style>
  .hover-underline-animation-widget {
    display: block;
    position: relative;
    color: #3ba697;
  }

  .hover-underline-animation-widget::after {
    content: '';
    position: absolute;
    width: 100%;
    transform: scaleX(0);
    height: 2px;
    bottom: 0;
    left: 0;
    background-color: #3ba697;
    transform-origin: bottom right;
    transition: transform 0.25s ease-out;
  }

  .hover-underline-animation-widget:hover::after {
    transform: scaleX(1);
    transform-origin: bottom left;
  }
</style>
